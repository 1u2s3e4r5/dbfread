dbfget - Python library for getting data out of DBF files
=========================================================

Requires Python 2.7 or 3.2 (works without change in both)

Project page: http://nerdly.info/ole/dbf/

License: MIT

Latest version of the source code: https://github.com/olemb/dbfget/

Simple example::

    >>> import dbfget
    >>> 
    >>> people = dbfget.read('people.dbf')
    >>> 
    >>> for p in people:
    ...     print(p['NAME'], p['BIRTHDAY'], p['BEARDED'])
    George 1982-12-16 True
    Wendy 1984-02-10 False


Installing
----------

Python 2::

  sudo python setup.py install

Python 3::

  sudo python3 setup.py install
    

Features
--------

  - the table object is a subclass of list
  - records are dictionaries
  - data is converted to native Python types
    (see Supported field types below)
  - records can optionally be returned as any kind of object
    (using the recfactory option, which defaults to ``dict``)
  - reads memo fields (.fpt) and returns them as unicode strings
    (binary memo fields are returned as byte strings)
  - strings are decoded and returned as unicode
    (defaults to 'latin1', unless you supply a the ``encoding``
    option)
  - file name case agnostic (``read('kabreg.dbf')`` will find
    ``KabReg.dbf`` and the memo file ``KABREG.FPT``). This
    (behaviour can be turned off by passing ``ignorecase=False``)


Possible future features
------------------------

  - auto-detection of code page / encoding. This is tricky, since
    the value is stored in only one byte, which is vendor specific,
    and in most files I've seen is just set to 0.
  - easy export to SQL / CSV
  - raw mode (to get all values as raw byte strings)

    
Status
------

This code in various incarnations has been in production at the
University of Tromsø since 2001. The current version reads all data
generated by Telemator (a network documentation system), which uses
Foxpro (as far as I can tell) and employs a wide range of data types.

The library has not been widely tested on other data, but I intend for
it to be able to read ANY dbf file. If you have a file it can't read,
or find a bug, I'd love to hear from you.

   
Supported field types
----------------------

=  ==========  ====================================================================
:  Field type   Converted to
=  ==========  ====================================================================
0  flags       int
C  text        unicode string
D  date        datetime.date or None
F  float       float or None
I  integer     int or None
L  logical     True, False or None
M  memo        unicode string (memo type) or byte string (picture and object type)
N  numeric     int, float or None
T  time        datetime.datetime
=  ==========  ====================================================================


Contact
--------

Ole Martin Bjørndalen - ombdalen@gmail.com - http://nerdly.info/ole/
