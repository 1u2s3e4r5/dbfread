dbfget - Python library for getting data out of DBF files
=========================================================

Requires Python 3.2 or 2.7 (works without change in both)

Project page: http://nerdly.info/ole/dbf/

License: MIT

Latest version of the source code: https://github.com/olemb/dbfget/

Simple example::

    >>> import dbfget
    >>> 
    >>> people = dbfget.read('people.dbf')
    >>> 
    >>> for p in people:
    ...     print(p['NAME'], p['BIRTHDAY'], p['BEARDED'])
    George 1982-12-16 True
    Wendy 1984-02-10 False
    

Features
--------

  - supports all data types and convert to native Python types
  - reads memo fields (.fpt) and returns them as unicode strings
    (binary memo fields are not yet supported)
  - returns records as dictionary (or alternative format, such as OrderedDict)
  - explicit code page conversion to unicode
  - option to lowercase field names
  - file name case agnostic (KabReg.dbf will match KABREG.FPT)


Possible future features
------------------------

  - transparent code page conversion to unicode where possible
    (this is tricky)
  - method to read deleted records
  - easy export to SQL / CSV
  - raw mode (to get values as byte strings)

    
Status
------

This code in various incarnations has been in production at the
University of Tromsø since 2001. The current version reads all data
generated by Telemator (a network documentation system), which uses
Foxpro (as far as I can tell) and employs a wide range of data types.

The library has not been widely tested on other data, but I intend for
it to be able to read ANY dbf file. If you have a file it can't read,
or find a bug, I'd love to hear from you.

   
Supported field types
----------------------

=  ==========  ====================================================================
:  Field type   Converted to
=  ==========  ====================================================================
0  flags       int
C  text        unicode string
D  date        datetime.date or None
F  float       float or None
I  integer     int or None
L  logical     True, False or None
M  memo        unicode string (memo type) or byte string (picture and object type)
N  numeric     int, float or None
T  time        datetime.datetime
=  ==========  ====================================================================


Contact
--------

Ole Martin Bjørndalen - ombdalen@gmail.com - http://nerdly.info/ole/
